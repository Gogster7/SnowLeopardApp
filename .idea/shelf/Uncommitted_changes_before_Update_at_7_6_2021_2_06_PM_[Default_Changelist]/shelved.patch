Index: app/src/main/java/org/kashmirworldfoundation/snowleopardapp/Fragment/AddFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.kashmirworldfoundation.snowleopardapp.Fragment;\r\n\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\n\r\nimport android.graphics.Color;\r\n\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\n\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\n\r\nimport android.widget.RadioGroup;\r\nimport android.widget.ScrollView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport org.kashmirworldfoundation.snowleopardapp.CreateStudy;\r\nimport org.kashmirworldfoundation.snowleopardapp.R;\r\n\r\n\r\nimport java.io.ByteArrayOutputStream;\r\n\r\nimport java.io.FileNotFoundException;\r\n\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\nimport android.content.SharedPreferences;\r\n\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.common.reflect.TypeToken;\r\nimport com.google.firebase.Timestamp;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\n\r\nimport org.kashmirworldfoundation.snowleopardapp.CameraStation;\r\nimport org.kashmirworldfoundation.snowleopardapp.Member;\r\nimport org.kashmirworldfoundation.snowleopardapp.MyDateTypeAdapter;\r\nimport org.kashmirworldfoundation.snowleopardapp.Study;\r\n\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\n\r\npublic class AddFragment  extends Fragment implements View.OnClickListener{\r\n    private static final String TAG = \"Add fragment\";\r\n    private static final int PICK_IMAGE1 = 100;\r\n    private static final int PICK_IMAGE2 = 200;\r\n    private EditText stationIdInput;\r\n    private EditText WatershedInput;\r\n    private EditText LatitudeInput;\r\n    private EditText LongitudeInput;\r\n    private EditText ElevationInput;\r\n    private EditText cameraIDInput;\r\n    private EditText NotesInput;\r\n    private EditText SdcardInput;\r\n    private TextView Title;\r\n    private String stationId;\r\n    private String watershedid;\r\n    private String latitudeS;\r\n    private String longitudeS;\r\n    private String altitudeS;\r\n    private String altitude;\r\n    private String cameraId;\r\n    private String terrain;\r\n    private String habitat;\r\n    private String lureType;\r\n    private String substrate;\r\n    private String potential;\r\n    private String notes;\r\n    private String sdcard;\r\n    private static final int LOCATION_REQUEST = 111;\r\n    private View fragmentView ;\r\n    private Button save,post,StudyAdd,StudyRefresh,Studyback;\r\n    private String SStudy;\r\n    private ArrayList<String> StudyArray;\r\n    private Date currentTime;\r\n    private ImageButton imgbtn1, imgbtn2;\r\n    private Spinner SpinStudies;\r\n    private Member me;\r\n    private TextView  netStatus;\r\n    private FirebaseFirestore db;\r\n    private FirebaseStorage fStorage;\r\n    private Integer counter=0;\r\n    private CameraStation current= new CameraStation();\r\n    private Boolean[] pic = {Boolean.FALSE,Boolean.FALSE};\r\n    private Boolean Study=Boolean.TRUE;\r\n    private ArrayAdapter<String> dataAdapter;\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        fragmentView = inflater.inflate(R.layout.fragment_add, container, false);\r\n        stationIdInput=fragmentView.findViewById(R.id.stationId);\r\n        WatershedInput=fragmentView.findViewById(R.id.watershedid);\r\n        LatitudeInput=fragmentView.findViewById(R.id.nId);\r\n        LongitudeInput=fragmentView.findViewById(R.id.eId);\r\n        ElevationInput=fragmentView.findViewById(R.id.elevationId);\r\n        cameraIDInput=fragmentView.findViewById(R.id.cameraId);\r\n        netStatus=fragmentView.findViewById(R.id.createStationNetStatusId);\r\n        save=fragmentView.findViewById(R.id.saveButtonId);\r\n        imgbtn1 = fragmentView.findViewById(R.id.CamPic1);\r\n        imgbtn2 = fragmentView.findViewById(R.id.CamPic2);\r\n        post=fragmentView.findViewById(R.id.postbuttonCam);\r\n        SdcardInput = fragmentView.findViewById(R.id.SdcardInput);\r\n        SpinStudies = (Spinner) fragmentView.findViewById(R.id.StudySpinner);\r\n        Title = fragmentView.findViewById(R.id.createStationLabel);\r\n        db=FirebaseFirestore.getInstance();\r\n        fStorage= FirebaseStorage.getInstance();\r\n        NotesInput =fragmentView.findViewById(R.id.NoteInput);\r\n\r\n        StudyAdd = fragmentView.findViewById(R.id.AddStudyBtn);\r\n        StudyAdd.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(getActivity(), CreateStudy.class));\r\n            }\r\n        });\r\n        StudyRefresh=fragmentView.findViewById(R.id.RefreshStudyBtn);\r\n        Studyback= fragmentView.findViewById(R.id.ChooseStudyBtn);\r\n        me =loaduser();\r\n        /*\r\n        String StudiesS = getActivity().getIntent().getStringExtra(\"Studies\");\r\n        StudyArray=new ArrayList<>(Arrays.asList(StudiesS.split(\",\")));\r\n        */\r\n        StudyArray = new ArrayList<>();\r\n        StudyArray=loadStudies();\r\n\r\n        change();\r\n\r\n\r\n        dataAdapter= new ArrayAdapter(this.getActivity(),android.R.layout.simple_spinner_item, StudyArray);\r\n\r\n        SpinStudies.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                String cur = StudyArray.get(position);\r\n                if (cur.equals( \"Pick A Study\")==Boolean.FALSE && cur.equals(\"No Studies\")==Boolean.FALSE) {\r\n                    SStudy = cur;\r\n                    SpinStudies.setVisibility(View.GONE);\r\n                    Title.setText(\"Add CameraStation\");\r\n                    fragmentView.findViewById(R.id.AddStudyBtn).setVisibility(View.GONE);\r\n                    fragmentView.findViewById(R.id.RefreshStudyBtn).setVisibility(View.GONE);\r\n                    stationIdInput.setVisibility(View.VISIBLE);\r\n                    WatershedInput.setVisibility(View.VISIBLE);\r\n                    LatitudeInput.setVisibility(View.VISIBLE);\r\n                    LongitudeInput.setVisibility(View.VISIBLE);\r\n                    ElevationInput.setVisibility(View.VISIBLE);\r\n                    cameraIDInput.setVisibility(View.VISIBLE);\r\n                    save.setVisibility(View.VISIBLE);\r\n                    imgbtn1.setVisibility(View.VISIBLE);\r\n                    imgbtn2.setVisibility(View.VISIBLE);\r\n\r\n                    SdcardInput.setVisibility(View.VISIBLE);\r\n                    NotesInput.setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.habitatIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.cameraIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.watershedIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.SdCardLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.lureTypeIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.TerrainIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.substrateIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.notesLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.stationP2IdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.potentialIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.nId).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.eId).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.stationId).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.elevationId).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.stationId).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.LongitudeIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.cameraId).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.SdcardInput).setVisibility(View.VISIBLE);\r\n\r\n                    fragmentView.findViewById(R.id.stationPIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.watershedid).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.elevationIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.LatitudeIdLabel).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.radioGroup01).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.radioGroup04).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.radioGroup03).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.radioGroup02).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.radioGroup05).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.saveButtonId).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.postbuttonCam).setVisibility(View.GONE);\r\n                    fragmentView.findViewById(R.id.createStationNetId).setVisibility(View.INVISIBLE);\r\n                    fragmentView.findViewById(R.id.createStationNetStatusId).setVisibility(View.INVISIBLE);\r\n                    fragmentView.findViewById(R.id.CamPic1).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.CamPic2).setVisibility(View.VISIBLE);\r\n                    fragmentView.findViewById(R.id.NoteInput).setVisibility(View.VISIBLE);\r\n                    Studyback.setVisibility(View.VISIBLE);\r\n\r\n\r\n                }\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n\r\n\r\n        });\r\n        Studyback.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n               change();\r\n\r\n            }\r\n        });\r\n        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        SpinStudies.setAdapter(dataAdapter);\r\n        StudyRefresh.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                db.collection(\"Study\").whereEqualTo(\"org\",me.getOrg()).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if(task.isSuccessful()){\r\n                            ArrayList<String> studies= new ArrayList<>();\r\n                            studies.add(\"Pick A Study\");\r\n                            for (QueryDocumentSnapshot documentSnapshot: task.getResult()){\r\n                                Study study = documentSnapshot.toObject(Study.class);\r\n                                studies.add(study.getTitle());\r\n                            }\r\n                            if (studies == null || studies.size()==1){\r\n                                studies.set(0,\"No Studies\");\r\n                            }\r\n                            dataAdapter.clear();\r\n                            dataAdapter.addAll(studies);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        imgbtn1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openGallery(PICK_IMAGE1);\r\n            }\r\n        });\r\n        imgbtn2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                openGallery(PICK_IMAGE2);\r\n            }\r\n        });\r\n        post.setOnClickListener(new Button.OnClickListener(){\r\n            @Override\r\n            public void onClick(View v) {\r\n                ArrayList<CameraStation> Clist= load();\r\n                if (Clist.size()==0){\r\n                    createToast(getContext(),\"No Camera stations saved\", Toast.LENGTH_LONG);\r\n                }\r\n                else{\r\n                    Fireload(Clist);\r\n                    ScrollView scroll= fragmentView.findViewById(R.id.ScrollViewAdd);\r\n                    scroll.scrollTo(0,0);\r\n                }\r\n\r\n            }\r\n        });\r\n        save.setOnClickListener(new Button.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!getInput()){\r\n                    return;\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                Date currentTime = Calendar.getInstance().getTime();\r\n                current.setPotential(potential);\r\n                current.setLureType(lureType);\r\n                current.setAltitude(altitudeS);\r\n                current.setLongitudeS(longitudeS);\r\n                current.setLatitudeS(latitudeS);\r\n                current.setStationId(stationId);\r\n                current.setSubstrate(substrate);\r\n                current.setTerrain(terrain);\r\n                current.setWatershedid(watershedid);\r\n                current.setHabitat(habitat);\r\n                current.setOrg(me.getOrg());\r\n                current.setAuthor(\"Member/\" + loaduid());\r\n                current.setCameraId(cameraId);\r\n                current.setPosted(new Timestamp(currentTime));\r\n                current.setPic(me.getProfile());\r\n                current.setaName(me.getFullname());\r\n                current.setNotes(notes);\r\n                current.setSdCard(sdcard);\r\n                current.setStudy(SStudy);\r\n                ArrayList<CameraStation> list = load();\r\n\r\n                list.add(current);\r\n                save(list);\r\n                current=new CameraStation();\r\n                AlertDialog.Builder alertDialog = new AlertDialog.Builder(getContext());\r\n                alertDialog.setTitle(\"SD Card\");\r\n                alertDialog.setMessage(\"Has the SD Card been formatted\");\r\n\r\n\r\n                alertDialog.setPositiveButton(\"Done\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        change();\r\n\r\n\r\n                    }\r\n                });\r\n                AlertDialog alert = alertDialog.create();\r\n                alert.show();\r\n\r\n            }\r\n        });\r\n\r\n        //get the bundle and the argument from mainActivity\r\n        Bundle b= this.getArguments();\r\n        if(b!=null){\r\n            latitudeS=b.getString(\"latitude\");\r\n            longitudeS=b.getString(\"longitude\");\r\n            altitudeS=b.getString(\"altitude\");\r\n        }else{\r\n            Log.d(TAG, \"Bundle is null\");\r\n        }\r\n\r\n        //initial the radiobutton Group\r\n        onClick(fragmentView);\r\n\r\n        //check net status\r\n        doNetCheck();\r\n\r\n        return fragmentView;\r\n    }\r\n    public static AddFragment newInstance() {\r\n        return new AddFragment();\r\n    }\r\n\r\n\r\n    //onStart the fragment for set Text\r\n    @Override\r\n    public void onStart(){\r\n        super.onStart();\r\n        this.LongitudeInput.setText(longitudeS);\r\n        this.LatitudeInput.setText(latitudeS);\r\n        this.ElevationInput.setText(altitudeS);\r\n    }\r\n\r\n    @Override\r\n    public void onResume(){\r\n        super.onResume();\r\n\r\n        this.LongitudeInput.setText(longitudeS);\r\n        this.LatitudeInput.setText(latitudeS);\r\n        this.ElevationInput.setText(altitudeS);\r\n    }\r\n\r\n    //refresh the fragment\r\n    public void refresh(){\r\n        FragmentTransaction ft = getFragmentManager().beginTransaction();\r\n        ft.detach(AddFragment.this).attach(AddFragment.this).commit();\r\n    }\r\n\r\n\r\n    //for radio button\r\n    @Override\r\n    public void onClick(View v) {\r\n        RadioGroup radioGroup01 = (RadioGroup) fragmentView .findViewById(R.id.radioGroup01);\r\n        radioGroup01.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener()\r\n        {\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // checkedId is the RadioButton selected\r\n                switch(checkedId) {\r\n                    case R.id.radioButtonSkunkId:\r\n                        lureType = \"Skunk + Fish Oil\";\r\n                        Toast.makeText(getActivity(), \"Lure Type You Selected Skunk + Fish Oil\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonCastorId:\r\n                        lureType = \"Castor + Fish Oil\";\r\n                        Toast.makeText(getActivity(), \"Lure Type You Selected Castor + Fish Oil\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonFishId:\r\n                        lureType = \"Fish Oil\";\r\n                        Toast.makeText(getActivity(), \"Lure Type You Selected Fish Oil\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonNoneId:\r\n                        lureType = \"None\";\r\n                        Toast.makeText(getActivity(), \"Lure Type You Selected None\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        RadioGroup radioGroup02 = (RadioGroup) fragmentView .findViewById(R.id.radioGroup02);\r\n        radioGroup02.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener()\r\n        {\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // checkedId is the RadioButton selected\r\n                switch(checkedId) {\r\n                    case R.id.radioButtonScrubId:\r\n                        habitat = \"Scrub\";\r\n                        Toast.makeText(getActivity(), \"Habitat You Selected Scrub\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonForestId:\r\n                        habitat = \"Forest\";\r\n                        Toast.makeText(getActivity(), \"Habitat You Selected Forest\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonPastureId:\r\n                        habitat = \"Pasture\";\r\n                        Toast.makeText(getActivity(), \"Habitat You Selected Pasture\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonBarrenId:\r\n                        habitat = \"Barren\";\r\n                        Toast.makeText(getActivity(), \"Habitat You Selected Barren\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonAgricId:\r\n                        habitat = \"Agric\";\r\n                        Toast.makeText(getActivity(), \"Habitat You Selected Agric\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        RadioGroup radioGroup03 = (RadioGroup) fragmentView .findViewById(R.id.radioGroup03);\r\n        radioGroup03.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener()\r\n        {\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // checkedId is the RadioButton selected\r\n                switch(checkedId) {\r\n                    case R.id.radioButtonRidgeId:\r\n                        terrain = \"Ridge\";\r\n                        Toast.makeText(getActivity(), \"Terrain You Selected Ridge\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonCliffBaseId:\r\n                        terrain = \"Cliff Base\";\r\n                        Toast.makeText(getActivity(), \"Terrain You Selected Cliff Base\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonDrawId:\r\n                        terrain = \"Draw\";\r\n                        Toast.makeText(getActivity(), \"Terrain You Selected Draw\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonValleyId:\r\n                        terrain = \"Valley\";\r\n                        Toast.makeText(getActivity(), \"Terrain You Selected Valley\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonSaddleId:\r\n                        terrain = \"Saddle\";\r\n                        Toast.makeText(getActivity(), \"Terrain You Selected Saddle\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonPlateauId:\r\n                        terrain = \"Plateau\";\r\n                        Toast.makeText(getActivity(), \"Terrain You Selected Plateau\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        RadioGroup radioGroup04 = (RadioGroup) fragmentView .findViewById(R.id.radioGroup04);\r\n        radioGroup04.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener()\r\n        {\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // checkedId is the RadioButton selected\r\n                switch(checkedId) {\r\n                    case R.id.radioButtonSandId:\r\n                        substrate= \"Sand\";\r\n                        Toast.makeText(getActivity(), \"Substrate You Selected Sand\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonSoilId:\r\n                        substrate= \"Soil\";\r\n                        Toast.makeText(getActivity(), \"Substrate You Selected Soil\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonRockId:\r\n                        substrate= \"Rock/Gravel\";\r\n                        Toast.makeText(getActivity(), \"Substrate You Selected Rock/Gravel\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonSnowId:\r\n                        substrate= \"Snow\";\r\n                        Toast.makeText(getActivity(), \"Substrate You Selected Snow\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonVegetationId:\r\n                        substrate= \"Vegetation\";\r\n                        Toast.makeText(getActivity(), \"Substrate You Selected Vegetation\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        RadioGroup radioGroup05 = (RadioGroup) fragmentView .findViewById(R.id.radioGroup05);\r\n        radioGroup05.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener()\r\n        {\r\n            public void onCheckedChanged(RadioGroup group, int checkedId) {\r\n                // checkedId is the RadioButton selected\r\n                switch(checkedId) {\r\n                    case R.id.radioButtonGoodId:\r\n                        potential = \"Good\";\r\n                        Toast.makeText(getActivity(), \"Potential You Selected Good\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonMediumId:\r\n                        potential = \"Medium\";\r\n                        Toast.makeText(getActivity(), \"Potential You Selected Medium\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    case R.id.radioButtonPoorId:\r\n                        potential = \"Poor\";\r\n                        Toast.makeText(getActivity(), \"Potential You Selected Poor\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    public boolean getInput(){\r\n        Log.d(TAG, \"In getInput \");\r\n        stationId=stationIdInput.getText().toString().trim();\r\n        watershedid=WatershedInput.getText().toString().trim();\r\n        latitudeS=LatitudeInput.getText().toString().trim();\r\n        longitudeS=LongitudeInput.getText().toString().trim();\r\n        altitude=ElevationInput.getText().toString().trim();\r\n        cameraId=cameraIDInput.getText().toString().trim();\r\n        notes = NotesInput.getText().toString().trim();\r\n        sdcard = SdcardInput.getText().toString().trim();\r\n\r\n        //for debug\r\n        Log.d(TAG, \"getInput; station id :\"+stationId+\" watersheid:  \"+watershedid+\" latitude:  \"+latitudeS+\" longtitude:  \"+longitudeS+\" elevation:  \"+altitude+\" cameraId:  \"+cameraId+\" Time:  \"+currentTime);\r\n        Log.d(TAG, \"getInput; terrain: \"+terrain+\" habitat :\"+habitat+\" lureType : \"+lureType+\" substrate: \"+substrate+\" potential station :\"+potential);\r\n\r\n        //prevent some blank\r\n        if (stationId.equals(\"\")){\r\n            createToast(getContext(),\"Station Id needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        else if(watershedid.equals(\"\")){\r\n            createToast(getContext(),\"WaterShed Id needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        else if(cameraId.equals(\"\")){\r\n            createToast(getContext(),\"Camera Id needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        else if(terrain==null){\r\n            createToast(getContext(),\"Terrain needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n\r\n        }\r\n        else if (habitat==null){\r\n            createToast(getContext(),\"Habitat needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        else if (lureType==null){\r\n            createToast(getContext(),\"Lure Type needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        else if(substrate==null){\r\n            createToast(getContext(),\"Station Id needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        else if(potential==null){\r\n            createToast(getContext(),\"Potential needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        else if(sdcard.equals(\"\")){\r\n            createToast(getContext(),\"SD card  ID needed\",Toast.LENGTH_LONG);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    //check internet status\r\n    private Boolean doNetCheck() {\r\n        ConnectivityManager cm =\r\n                (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (cm == null) {\r\n            return false;\r\n        }\r\n\r\n        NetworkInfo netInfo = cm.getActiveNetworkInfo();\r\n        if (netStatus != null && netInfo != null && netInfo.isConnected()) {\r\n            netStatus.setText(\"On\");\r\n            return true;\r\n        } else {\r\n            if (netStatus != null) {\r\n                netStatus.setText(\"Off\");\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void saveDialog(){\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n        builder.setIcon(R.drawable.kwflogo);\r\n        builder.setTitle(\"Save the Station?\");\r\n        if(doNetCheck()){\r\n            // builder.setMessage(\"Internet : On\");\r\n        }else{\r\n            builder.setMessage(\"Internet: Off , it will upload data later.\");\r\n        }\r\n\r\n        currentTime = Calendar.getInstance().getTime();\r\n        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int id) {\r\n                //check has some blank or not\r\n                if(getInput()){\r\n                    createToast(getActivity(),\"Create Station Successful :\"+currentTime.toString(), Toast.LENGTH_LONG);\r\n                }else{\r\n                    Toast.makeText(getActivity(), \"Please fill in all fields\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"CANCEL\", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int id) {\r\n                Toast.makeText(getActivity(), \"CANCEL\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n    }\r\n\r\n\r\n    public static void createToast(Context context, String message, int time) {\r\n        Toast toast = Toast.makeText(context, \"\" + message, time);\r\n        View toastView = toast.getView();\r\n        toastView.setBackgroundColor(Color.parseColor(\"#008577\"));\r\n        TextView tv = toast.getView().findViewById(android.R.id.message);\r\n        tv.setPadding(140, 75, 140, 75);\r\n        tv.setTextColor(0xFFFFFFFF);\r\n        toast.show();\r\n    }\r\n    private void save(ArrayList<CameraStation> list){\r\n        SharedPreferences sharedPreferences = getContext().getSharedPreferences(\"user\",Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n\r\n        Gson gson = new GsonBuilder().registerTypeAdapter(Timestamp.class,new MyDateTypeAdapter()).create();;\r\n        String json =gson.toJson(list);\r\n\r\n        editor.putString(\"station\",json);\r\n        editor.apply();\r\n    }\r\n    private ArrayList<CameraStation> load(){\r\n        SharedPreferences sharedPreferences = getContext().getSharedPreferences(\"user\",Context.MODE_PRIVATE);\r\n        Gson gson = new GsonBuilder().registerTypeAdapter(Timestamp.class,new MyDateTypeAdapter()).create();;\r\n        String json =sharedPreferences.getString(\"station\",null);\r\n        if (json==null){\r\n            return new ArrayList<>();\r\n        }\r\n        else{\r\n            createToast(getContext(), \"CameraStations here\",Toast.LENGTH_LONG);\r\n\r\n            Type type = new TypeToken<ArrayList<CameraStation>>() {}.getType();\r\n            return gson.fromJson(json,type);\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private String loaduid(){\r\n        SharedPreferences sharedPreferences = getContext().getSharedPreferences(\"user\",Context.MODE_PRIVATE);\r\n        return sharedPreferences.getString(\"uid\",null);\r\n    }\r\n    private Member loaduser(){\r\n        SharedPreferences sharedPreferences = getContext().getSharedPreferences(\"user\",Context.MODE_PRIVATE);\r\n        Gson gson= new Gson();\r\n        String json = sharedPreferences.getString(\"user\", null);\r\n        Type type =new TypeToken<Member>(){}.getType();\r\n        return gson.fromJson(json,type);\r\n    }\r\n    private ArrayList<String> loadStudies(){\r\n        // TODO: studies are null or have no titles\r\n        SharedPreferences sharedPreferences =getContext().getSharedPreferences(\"user\",Context.MODE_PRIVATE);\r\n\r\n        Gson gson= new Gson();\r\n        String json = sharedPreferences.getString(\"studies\",null);\r\n        Type type= new TypeToken<ArrayList<String>>(){}.getType();\r\n        return gson.fromJson(json,type);\r\n\r\n    }\r\n    private void Fireload(final ArrayList<CameraStation> list) {\r\n        final Iterator<CameraStation> iter = list.iterator();\r\n        CollectionReference collection = db.collection(\"CameraStation\");\r\n        while (iter.hasNext()) {\r\n            CameraStation station = iter.next();\r\n            DocumentReference doc = collection.document();\r\n            String path = doc.getId();\r\n            if (station.getCamerapic1() != null) {\r\n                pic[0] = Boolean.TRUE;\r\n\r\n                try {\r\n\r\n                    Bitmap bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), Uri.parse(station.getCamerapic1()));\r\n                    ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                    bitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);\r\n                    byte[] datan = baos.toByteArray();\r\n                    StorageReference profile = fStorage.getReference(path + \"/image1\");\r\n                    UploadTask uploadTask = profile.putBytes(datan);\r\n                    uploadTask.addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<UploadTask.TaskSnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n\r\n                            }\r\n\r\n                        }\r\n                    });\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n            if (station.getCamerapic2() != null) {\r\n\r\n                try {\r\n                    pic[1] = Boolean.TRUE;\r\n\r\n                    Bitmap bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), Uri.parse(station.getCamerapic2()));\r\n                    ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                    bitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);\r\n                    byte[] datan = baos.toByteArray();\r\n                    StorageReference profile = fStorage.getReference(path + \"/image2\");\r\n                    UploadTask uploadTask = profile.putBytes(datan);\r\n                    uploadTask.addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<UploadTask.TaskSnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n\r\n                            }\r\n\r\n                        }\r\n                    });\r\n                } catch (FileNotFoundException e) {\r\n                    e.printStackTrace();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n            if (pic[0]) {\r\n                station.setCamerapic1(path + \"/image1\");\r\n            }\r\n            if (pic[1]) {\r\n                station.setCamerapic2(path + \"/image2\");\r\n            }\r\n            station.setFirebaseId(\"CameraStation/\"+path);\r\n            db.collection(\"CameraStation\").document(path).set(station).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    iter.remove();\r\n                    counter +=1;\r\n                    String count = counter.toString();\r\n                    Integer size = list.size();\r\n                    String rem = size.toString();\r\n                    createToast(getActivity(), count + \" stations sent to firebase \" + rem + \" stations remain\", Toast.LENGTH_SHORT);\r\n\r\n                }\r\n            });\r\n\r\n            counter = 0;\r\n            save(new ArrayList<>());\r\n        }\r\n    }\r\n    private void change(){\r\n        SpinStudies.setVisibility(View.VISIBLE);\r\n        SpinStudies.setAdapter(dataAdapter);\r\n\r\n        Title.setText(\"Choose Study\");\r\n        fragmentView.findViewById(R.id.AddStudyBtn).setVisibility(View.VISIBLE);\r\n        StudyRefresh.setVisibility(View.VISIBLE);\r\n        stationIdInput.setVisibility(View.GONE);\r\n        stationIdInput.setText(\"\");\r\n        WatershedInput.setVisibility(View.GONE);\r\n        WatershedInput.setText(\"\");\r\n        LatitudeInput.setVisibility(View.GONE);\r\n        LatitudeInput.setText(\"\");\r\n        LongitudeInput.setVisibility(View.GONE);\r\n        LongitudeInput.setText(\"\");\r\n        ElevationInput.setVisibility(View.GONE);\r\n        ElevationInput.setText(\"\");\r\n        cameraIDInput.setVisibility(View.GONE);\r\n        cameraIDInput.setText(\"\");\r\n        save.setVisibility(View.GONE);\r\n        imgbtn1.setVisibility(View.GONE);\r\n\r\n        imgbtn2.setVisibility(View.GONE);\r\n\r\n        SdcardInput.setVisibility(View.GONE);\r\n        SdcardInput.setText(\"\");\r\n        NotesInput.setVisibility(View.GONE);\r\n        NotesInput.setText(\"\");\r\n        fragmentView.findViewById(R.id.habitatIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.cameraIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.watershedIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.SdCardLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.lureTypeIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.TerrainIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.substrateIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.notesLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.stationP2IdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.potentialIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.nId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.eId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.stationId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.elevationId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.stationId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.LongitudeIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.cameraId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.SdcardInput).setVisibility(View.GONE);\r\n\r\n        fragmentView.findViewById(R.id.stationPIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.watershedid).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.elevationIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.LatitudeIdLabel).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.radioGroup01).setVisibility(View.GONE);\r\n        RadioGroup rad=(RadioGroup) fragmentView.findViewById(R.id.radioGroup01);\r\n        rad.clearCheck();\r\n\r\n        fragmentView.findViewById(R.id.radioGroup04).setVisibility(View.GONE);\r\n        rad=fragmentView.findViewById(R.id.radioGroup04);\r\n        rad.clearCheck();\r\n        fragmentView.findViewById(R.id.radioGroup03).setVisibility(View.GONE);\r\n        rad=fragmentView.findViewById(R.id.radioGroup03);\r\n        rad.clearCheck();\r\n        fragmentView.findViewById(R.id.radioGroup02).setVisibility(View.GONE);\r\n        rad=fragmentView.findViewById(R.id.radioGroup02);\r\n        rad.clearCheck();\r\n        fragmentView.findViewById(R.id.radioGroup05).setVisibility(View.GONE);\r\n        rad=fragmentView.findViewById(R.id.radioGroup05);\r\n        rad.clearCheck();\r\n        fragmentView.findViewById(R.id.saveButtonId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.postbuttonCam).setVisibility(View.VISIBLE);\r\n        fragmentView.findViewById(R.id.createStationNetId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.createStationNetStatusId).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.CamPic1).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.CamPic2).setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.NoteInput).setVisibility(View.GONE);\r\n        Studyback.setVisibility(View.GONE);\r\n        fragmentView.findViewById(R.id.ScrollViewAdd).scrollTo(0,0);\r\n        ImageButton img=fragmentView.findViewById(R.id.CamPic1);\r\n        img.setImageResource(R.drawable.camera);\r\n        img=fragmentView.findViewById(R.id.CamPic2);\r\n        img.setImageResource(R.drawable.camera);\r\n    }\r\n    private void openGallery(int PICK_IMAGE){\r\n        Intent intent = new Intent();\r\n        intent.setType(\"image/*\");\r\n        intent.setAction(Intent.ACTION_GET_CONTENT);\r\n        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), PICK_IMAGE);\r\n    }\r\n    @Override\r\n    public void onActivityResult(int requestcode,int resultcode, @Nullable Intent data){\r\n        super.onActivityResult(requestcode,resultcode,data);\r\n\r\n        if (resultcode== Activity.RESULT_OK && requestcode ==PICK_IMAGE1){\r\n            Uri imageurl =data.getData();\r\n            imgbtn1.setImageURI(imageurl);\r\n\r\n            imgbtn1.setDrawingCacheEnabled(true);\r\n            imgbtn1.buildDrawingCache();\r\n            //current.setCamerapic1(ImageFilePath.getPath(getContext(), data.getData()));\r\n            current.setCamerapic1(imageurl.toString());\r\n            Log.e(TAG, imageurl.toString() );\r\n\r\n\r\n        }\r\n        if (resultcode== Activity.RESULT_OK && requestcode ==PICK_IMAGE2){\r\n            Uri imageurl =data.getData();\r\n            imgbtn2.setImageURI(imageurl);\r\n            imgbtn2.setDrawingCacheEnabled(true);\r\n            imgbtn2.buildDrawingCache();\r\n            current.setCamerapic2(imageurl.toString());\r\n            //current.setCamerapic2(ImageFilePath.getPath(getContext(),data.getData()));\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/kashmirworldfoundation/snowleopardapp/Fragment/AddFragment.java	(revision 120f67078bb85a5c4255e784d80a2e4329426d96)
+++ app/src/main/java/org/kashmirworldfoundation/snowleopardapp/Fragment/AddFragment.java	(date 1624491266352)
@@ -338,7 +338,7 @@
                 alertDialog.setPositiveButton("Done", new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
-                        change();
+                        // change();
 
 
                     }
